import type { NextPage } from "next";
import { useSession } from "next-auth/react";
import Head from "next/head";
import { useEffect, useState } from "react";
import RegisterForm from "../components/RegisterForm";
import { trpc } from "../utils/trpc";

// import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const { status, data: sessionData } = useSession();
  // const hello = trpc.useQuery(["example.getAll"]);

  const { data } = trpc.useQuery(["userRouter.getVenues", { id: sessionData?.user?.id }])

  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false)
  const [isRegisterModalOpen, setIsRegisterModalOpen] = useState(false)

  const toggleLoginModal = () => {
    setIsLoginModalOpen(!isLoginModalOpen)
  }

  const toggleRegisterModal = () => {
    setIsRegisterModalOpen(!isRegisterModalOpen)
  }

  return (
    <>
      <Head>
        <title>Cacao Whatsapp</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
        {status === 'authenticated' ? (
          <>
            {data?.venue ? (
              'Ya tenes una venue asignada'
            ) : (
              <>
                <h1 className="text-5xl md:text-[5rem] leading-normal font-extrabold text-gray-700">
                  Cacao
                </h1>
                <RegisterForm toggleModalVisibility={toggleRegisterModal} /></>
            )}
          </>
        ) : (
          'NOT LOGGED IN'
        )}
      </main>

    </>
  );
};

export default Home;